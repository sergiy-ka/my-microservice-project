pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    some-label: jenkins-kaniko
spec:
  serviceAccountName: jenkins-sa
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:v1.16.0-debug
    imagePullPolicy: Always
    command:
    - sleep
    args:
    - 99d
  - name: git
    image: alpine/git
    command:
    - sleep
    args:
    - 99d
"""
        }
    }

    environment {
        ECR_REGISTRY = "692741817540.dkr.ecr.us-west-2.amazonaws.com"
        IMAGE_NAME = "lesson-8-9-django-app"
        IMAGE_TAG = "v1.0.${BUILD_NUMBER}"
        COMMIT_EMAIL = "jenkins@localhost"
        COMMIT_NAME = "jenkins"
    }

    stages {
        stage('Build & Push Docker Image') {
            steps {
                container('kaniko') {
                    sh '''
                    /kaniko/executor \\
                        --context `pwd`/lesson-8-9 \\
                        --dockerfile `pwd`/lesson-8-9/Dockerfile \\
                        --destination=$ECR_REGISTRY/$IMAGE_NAME:$IMAGE_TAG \\
                        --cache=true \\
                        --insecure \\
                        --skip-tls-verify
                    '''
                }
            }
        }

        stage('Update Chart Tag in Git') {
            steps {
                container('git') {
                    withCredentials([usernamePassword(credentialsId: 'github-token', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PAT')]) {
                        sh '''
                        git clone https://$GIT_USERNAME:$GIT_PAT@github.com/sergiy-ka/my-microservice-project.git
                        cd my-microservice-project

                        # üîπ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—é
                        echo "=== –ü–æ—Ç–æ—á–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è ==="
                        pwd

                        # üîπ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –ø–æ–∫–∞–∑—É—î–º–æ –≤–º—ñ—Å—Ç –∫–æ—Ä–µ–Ω—è
                        echo "=== –í–º—ñ—Å—Ç –∫–æ—Ä–µ–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é ==="
                        ls -la

                        # üîπ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: —à—É–∫–∞—î–º–æ —Ñ–∞–π–ª values.yaml
                        echo "=== –®—É–∫–∞—î–º–æ values.yaml ==="
                        find . -name "values.yaml" -type f

                        # üîπ –î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: –ø–æ–∫–∞–∑—É—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫ lesson-8-9
                        if [ -d "lesson-8-9" ]; then
                          echo "=== –°—Ç—Ä—É–∫—Ç—É—Ä–∞ lesson-8-9/charts ==="
                          find lesson-8-9/charts -type d
                        else
                          echo "‚ùå –ü–∞–ø–∫–∞ lesson-8-9 –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!"
                          exit 1
                        fi

                        # Update the image tag in values.yaml
                        sed -i "s/tag: .*/tag: $IMAGE_TAG/" lesson-8-9/charts/django-app/values.yaml

                        git config user.email "$COMMIT_EMAIL"
                        git config user.name "$COMMIT_NAME"
                        git add values.yaml
                        git commit -m "Update image tag to $IMAGE_TAG"
                        git push origin lesson-8-9
                        '''
                    }
                }
            }
        }
    }
}