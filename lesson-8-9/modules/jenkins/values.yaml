controller:
  extraEnv:
    GITHUB_TOKEN:
      valueFrom:
        secretKeyRef:
          name: jenkins-github-token
          key: GITHUB_TOKEN
  admin:
    username: admin
    password: admin123

  serviceType: LoadBalancer
  servicePort: 80

  service:
    port: 80
    targetPort: 8080

  resources:
    limits:
      cpu: "500m"
      memory: "1Gi"
    requests:
      cpu: "250m"
      memory: "512Mi"

  persistentVolume:
    enabled: true
    storageClass: "ebs-sc"
    size: 10Gi

  installPlugins:
    - kubernetes:latest
    - workflow-aggregator:latest
    - git:latest
    - configuration-as-code:latest
    - credentials-binding:latest
    - github:latest
    - docker-plugin:latest
    - docker-workflow:latest
    - job-dsl:latest

  serviceAccount:
    name: jenkins-sa
    create: false

  # Jenkins Configuration as Code (JCasC)
  JCasC:
    configScripts:
      credentials: |
        credentials:
          system:
            domainCredentials:
            - credentials:
              - usernamePassword:
                  scope: GLOBAL
                  id: github-token
                  username: "sergiy-ka"
                  password: "${GITHUB_TOKEN}"
                  description: GitHub PAT

      seed-job: |
        jobs:
        - script: >
            job('seed-job') {
              description('Job to generate pipeline for Django project')
              scm {
                git {
                  remote {
                    url('https://github.com/sergiy-ka/my-microservice-project.git')
                    credentials('github-token')
                  }
                  branches('*/lesson-8-9')
                  scriptPath('lesson-8-9/jenkins-jcas-c.yaml')
                }
              }
              triggers {
                scm('H/5 * * * *')
              }
            }